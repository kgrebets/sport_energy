{"version":3,"file":"init-footer-CioJlKFE.js","sources":["../../src/js/header.ts","../../src/js/constants/general.ts","../../src/js/utils/toasts.ts","../../src/js/services/request.ts","../../src/services/quote-service.ts","../../src/js/quote.ts","../../src/js/init-footer.ts"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const burgerButton = document.querySelector(\n    '.burger'\n  ) as HTMLButtonElement | null;\n  const mobileMenu = document.querySelector(\n    '.mobile-menu'\n  ) as HTMLElement | null;\n  const closeButton = document.querySelector(\n    '.mobile-menu__close'\n  ) as HTMLButtonElement | null;\n  const overlay = document.querySelector(\n    '.mobile-menu__overlay'\n  ) as HTMLElement | null;\n\n  if (!burgerButton || !mobileMenu || !closeButton || !overlay) return;\n\n  const openMobileMenu = () => {\n    mobileMenu.classList.add('mobile-menu--open');\n  };\n\n  const closeMobileMenu = () => {\n    mobileMenu.classList.remove('mobile-menu--open');\n  };\n\n  burgerButton.addEventListener('click', openMobileMenu);\n  closeButton.addEventListener('click', closeMobileMenu);\n  overlay.addEventListener('click', closeMobileMenu);\n\n  // -> ACTIVE SWITCH\n  const homeLinkDesktop = document.querySelector(\n    '.main-nav .home-link'\n  ) as HTMLAnchorElement | null;\n  const favoritesLinkDesktop = document.querySelector(\n    '.main-nav .favorites-link'\n  ) as HTMLAnchorElement | null;\n\n  const setActiveLink = () => {\n    const currentPage = window.location.pathname;\n\n    if (homeLinkDesktop && favoritesLinkDesktop) {\n      homeLinkDesktop.classList.remove('active-oval');\n      favoritesLinkDesktop.classList.remove('active-oval');\n\n      if (currentPage === '/index.html' || currentPage === '/') {\n        homeLinkDesktop.classList.add('active-oval');\n      } else if (currentPage === '/favorites.html') {\n        favoritesLinkDesktop.classList.add('active-oval');\n      }\n    }\n  };\n  setActiveLink();\n  window.addEventListener('popstate', setActiveLink);\n});\n","export const YOUR_ENERGY_API_URL = 'https://your-energy.b.goit.study/api/';","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport const showErrorMessage = (\n  { title, message, position, ...otherOptions } = {\n    title: 'Error',\n    message: 'Something went wrong. Please try again later.',\n    position: 'topRight',\n  }\n) => {\n  iziToast.error({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n\nexport const showSuccessMessage = (\n  { title, message, position, ...otherOptions } = {\n    title: 'Success',\n    message: 'Operation completed successfully.',\n    position: 'topRight',\n  }\n) => {\n  iziToast.success({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n\nexport const showInfoMessage = (\n  { title, message, position, ...otherOptions }\n) => {\n  iziToast.info({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n","import axios from \"axios\";\nimport {YOUR_ENERGY_API_URL} from \"../constants/general\";\nimport {showErrorMessage} from \"../utils/toasts\";\n// TODO: Example of request. Remove when go live.\n// import {ExercisesRequest, ExercisesResponse, FilterRequest, FilterResponse} from \"../types/api-types\";\n\n/**\n * Makes an asynchronous HTTP GET request to the specified API endpoint and retrieves data.\n *\n * @template T - The type of the requestData parameter.\n * @template K - The type of the data expected in the response.\n *\n * @param {string} endpoint - The API endpoint to which the GET request is sent.\n * @param {Partial<T>} requestData - An object containing query parameters for the GET request.\n *\n * @returns {Promise<K>} A promise that resolves to the data retrieved from the API response.\n */\nexport const makeGetRequest = async <T, K>(endpoint: string, requestData?: Partial<T>): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.get<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, {\n      params: requestData\n    });\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous POST request to a specified API endpoint with the provided request data,\n * and returns the response data.\n *\n * @template T The type of the request data to be sent in the POST request.\n * @template K The type of the response data expected from the POST request.\n *\n * @param {string} endpoint The API endpoint to which the POST request will be sent.\n * @param {T} requestData The data to be sent in the body of the POST request.\n *\n * @returns {Promise<K>} A promise that resolves to the response data from the server.\n */\nexport const makePostRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.post<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous HTTP PATCH request to the specified API endpoint.\n *\n * @template T The type of the request payload.\n * @template K The expected type of the response data.\n *\n * @param {string} endpoint - The API endpoint to which the PATCH request will be sent, appended to the base URL.\n * @param {T} requestData - The payload to be sent with the PATCH request.\n * @returns {Promise<K>} A promise that resolves to the response data of type K.\n *\n * @throws {Error} Throws an error if the HTTP request fails or if there is an issue with the response.\n */\nexport const makePatchRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.patch<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n// TODO: Example of request. Remove when go live.\n// makeGetRequest<ExercisesRequest, ExercisesResponse>('exercises', {\n//   bodypart: 'back',\n//   muscles: 'abductors',\n//   equipment: 'band',\n//   keyword: 'back',\n//   page: 1,\n//   limit: 10,\n// }).then(data => console.log('Exercises', data));\n//\n// makeGetRequest<FilterRequest, FilterResponse>('exercises', {\n//   filter: 'Body parts',\n//   page: 1,\n//   limit: 12,\n// }).then(data => console.log('Filters', data));","import { makeGetRequest } from \"../js/services/request\";\nimport { QuoteResponse } from \"../js/types/response.types\";\n\n\nexport async function getQuote(): Promise<QuoteResponse> {\n    const response = await makeGetRequest<QuoteResponse, void>(\"quote\");\n    if (!response) {\n        throw new Error(\"Cant' get quote\");\n    }\n    return response;\n}","import { getQuote } from \"../services/quote-service\";\nimport { QuoteResponse } from \"./types/response.types\";\n\nconst quoteTextElement = document.getElementById(\"quote-text\");\nconst quoteAuthorElement = document.getElementById(\"quote-author\");\n\nconst QUOTE_STORAGE_KEY = \"quote\";\nconst QUOTE_DATE_STORAGE_KEY = \"quoteDate\";\n\nfunction getCurrentDate(): string {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nfunction getStoredQuote(): QuoteResponse | null {\n  const storedQuote = localStorage.getItem(QUOTE_STORAGE_KEY);\n  const storedDate = localStorage.getItem(QUOTE_DATE_STORAGE_KEY);\n  const today = getCurrentDate();\n\n  if (storedQuote && storedDate === today) {\n    try {\n      return JSON.parse(storedQuote);\n    } catch (error) {\n      console.error(\"Error parsing stored quote:\", error);\n      return null;\n    }\n  }\n  return null;\n}\n\nfunction updateQuoteDisplay(quote: string, author: string): void {\n  if (!quoteTextElement || !quoteAuthorElement) {\n    throw new Error(\"Can't find quote elements\");\n  }\n  quoteTextElement.textContent = quote;\n  quoteAuthorElement.textContent = author;\n}\n\nfunction storeQuote(quote: string, author: string): void {\n  const quoteData = JSON.stringify({ quote, author });\n  const today = getCurrentDate();\n  localStorage.setItem(QUOTE_STORAGE_KEY, quoteData);\n  localStorage.setItem(QUOTE_DATE_STORAGE_KEY, today);\n}\n\nasync function fetchNewQuote(): Promise<QuoteResponse | null> {\n  try {\n    const data = await getQuote();\n    if (data && data.quote) {\n      return { quote: data.quote, author: data.author };\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching quote:\", error);\n    return null;\n  }\n}\n\nexport async function fetchQuote(): Promise<void> {\n  if (!quoteTextElement || !quoteAuthorElement) {\n    throw new Error(\"Can't find quote elements\");\n  }\n\n  const storedQuoteData = getStoredQuote();\n  if (storedQuoteData) {\n    updateQuoteDisplay(storedQuoteData.quote, storedQuoteData.author);\n    return;\n  }\n\n  const newQuoteData = await fetchNewQuote();\n  if (newQuoteData) {\n    storeQuote(newQuoteData.quote, newQuoteData.author);\n    updateQuoteDisplay(newQuoteData.quote, newQuoteData.author);\n  } else {\n    updateQuoteDisplay(\"Failed to fetch quote.\", \"\");\n  }\n}","import { showErrorMessage, showSuccessMessage } from './utils/toasts';\nimport { makePostRequest } from './services/request';\nimport { SubscriptionRequest } from './types/request.types';\n\nexport function initFooter() {\n  const form = document.getElementById('subscription-form') as HTMLFormElement;\n\n  const footerYearElement = document.querySelector('.footer-year p');\n  if (footerYearElement) {\n    footerYearElement.textContent = `Â©${new Date().getFullYear()}`;\n  }\n\n  if (!form) {\n    return;\n  }\n\n  form.addEventListener('submit', handleSubscriptionSubmit);\n\n  async function handleSubscriptionSubmit(event: Event): Promise<void> {\n    event.preventDefault();\n\n    const formData = new FormData(form);\n    const email = formData.get('email') as string;\n\n    if (!email || !isValidEmail(email)) {\n      showErrorMessage({\n        title: 'Error',\n        message: 'Please enter a valid email address',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    try {\n      const response = await makePostRequest<SubscriptionRequest, void>(\n        'subscription',\n        { email }\n      );\n\n      if (response === undefined) {\n        throw new Error('Subscription failed');\n      }\n\n      form.reset();\n\n      showSuccessMessage({\n        title: 'Success',\n        message: 'Thank you for subscribing!',\n        position: 'topRight',\n      });\n    } catch (error) {\n      showErrorMessage({\n        title: 'Error',\n        message: 'Failed to subscribe. Please try again later.',\n        position: 'topRight',\n      });\n    }\n  }\n\n  function isValidEmail(email: string): boolean {\n    const emailPattern = /^\\w+(\\.\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return emailPattern.test(email);\n  }\n}\n"],"names":["burgerButton","mobileMenu","closeButton","overlay","openMobileMenu","closeMobileMenu","homeLinkDesktop","favoritesLinkDesktop","setActiveLink","currentPage","YOUR_ENERGY_API_URL","showErrorMessage","title","message","position","otherOptions","iziToast","showSuccessMessage","showInfoMessage","makeGetRequest","endpoint","requestData","data","axios","e","makePostRequest","getQuote","response","quoteTextElement","quoteAuthorElement","QUOTE_STORAGE_KEY","QUOTE_DATE_STORAGE_KEY","getCurrentDate","getStoredQuote","storedQuote","storedDate","today","error","updateQuoteDisplay","quote","author","storeQuote","quoteData","fetchNewQuote","fetchQuote","storedQuoteData","newQuoteData","initFooter","form","footerYearElement","handleSubscriptionSubmit","event","email","isValidEmail"],"mappings":"svBAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMA,EAAe,SAAS,cAC5B,SACF,EACMC,EAAa,SAAS,cAC1B,cACF,EACMC,EAAc,SAAS,cAC3B,qBACF,EACMC,EAAU,SAAS,cACvB,uBACF,EAEA,GAAI,CAACH,GAAgB,CAACC,GAAc,CAACC,GAAe,CAACC,EAAS,OAE9D,MAAMC,EAAiB,IAAM,CAChBH,EAAA,UAAU,IAAI,mBAAmB,CAC9C,EAEMI,EAAkB,IAAM,CACjBJ,EAAA,UAAU,OAAO,mBAAmB,CACjD,EAEaD,EAAA,iBAAiB,QAASI,CAAc,EACzCF,EAAA,iBAAiB,QAASG,CAAe,EAC7CF,EAAA,iBAAiB,QAASE,CAAe,EAGjD,MAAMC,EAAkB,SAAS,cAC/B,sBACF,EACMC,EAAuB,SAAS,cACpC,2BACF,EAEMC,EAAgB,IAAM,CACpB,MAAAC,EAAc,OAAO,SAAS,SAEhCH,GAAmBC,IACLD,EAAA,UAAU,OAAO,aAAa,EACzBC,EAAA,UAAU,OAAO,aAAa,EAE/CE,IAAgB,eAAiBA,IAAgB,IACnCH,EAAA,UAAU,IAAI,aAAa,EAClCG,IAAgB,mBACJF,EAAA,UAAU,IAAI,aAAa,EAGtD,EACcC,EAAA,EACP,OAAA,iBAAiB,WAAYA,CAAa,CACnD,CAAC,ECpDM,MAAME,EAAsB,wCCGtBC,EAAmB,CAC9B,CAAE,MAAAC,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,GAAiB,CAC9C,MAAO,QACP,QAAS,gDACT,SAAU,UACZ,IACG,CACHC,EAAS,MAAM,CACb,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,EAEaE,EAAqB,CAChC,CAAE,MAAAL,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,GAAiB,CAC9C,MAAO,UACP,QAAS,oCACT,SAAU,UACZ,IACG,CACHC,EAAS,QAAQ,CACf,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,EAEaG,EAAkB,CAC7B,CAAE,MAAAN,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,KAC5B,CACHC,EAAS,KAAK,CACZ,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,ECzBaI,EAAiB,MAAaC,EAAkBC,IAAqD,CAC5G,GAAA,CACI,KAAA,CAAE,KAAAC,GAAS,MAAMC,EAAM,IAAO,GAAGb,CAAmB,GAAGU,CAAQ,GAAI,CACvE,OAAQC,CAAA,CACT,EAEM,OAAAC,QACAE,EAAG,CACV,QAAQ,MAAMA,CAAC,EACEb,EAAA,CAAA,CAErB,EAcac,EAAkB,MAAaL,EAAkBC,IAA2C,CACnG,GAAA,CACI,KAAA,CAAE,KAAAC,CAAK,EAAI,MAAMC,EAAM,KAAQ,GAAGb,CAAmB,GAAGU,CAAQ,GAAIC,CAAW,EAE9E,OAAAC,QACAE,EAAG,CACV,QAAQ,MAAMA,CAAC,EACEb,EAAA,CAAA,CAErB,EC/CA,eAAsBe,GAAmC,CAC/C,MAAAC,EAAW,MAAMR,EAAoC,OAAO,EAClE,GAAI,CAACQ,EACK,MAAA,IAAI,MAAM,iBAAiB,EAE9B,OAAAA,CACX,CCPA,MAAMC,EAAmB,SAAS,eAAe,YAAY,EACvDC,EAAqB,SAAS,eAAe,cAAc,EAE3DC,EAAoB,QACpBC,EAAyB,YAE/B,SAASC,GAAyB,CACzB,OAAA,IAAI,OAAO,cAAc,MAAM,GAAG,EAAE,CAAC,CAC9C,CAEA,SAASC,GAAuC,CACxC,MAAAC,EAAc,aAAa,QAAQJ,CAAiB,EACpDK,EAAa,aAAa,QAAQJ,CAAsB,EACxDK,EAAQJ,EAAe,EAEzB,GAAAE,GAAeC,IAAeC,EAC5B,GAAA,CACK,OAAA,KAAK,MAAMF,CAAW,QACtBG,EAAO,CACN,eAAA,MAAM,8BAA+BA,CAAK,EAC3C,IAAA,CAGJ,OAAA,IACT,CAEA,SAASC,EAAmBC,EAAeC,EAAsB,CAC3D,GAAA,CAACZ,GAAoB,CAACC,EAClB,MAAA,IAAI,MAAM,2BAA2B,EAE7CD,EAAiB,YAAcW,EAC/BV,EAAmB,YAAcW,CACnC,CAEA,SAASC,EAAWF,EAAeC,EAAsB,CACvD,MAAME,EAAY,KAAK,UAAU,CAAE,MAAAH,EAAO,OAAAC,EAAQ,EAC5CJ,EAAQJ,EAAe,EAChB,aAAA,QAAQF,EAAmBY,CAAS,EACpC,aAAA,QAAQX,EAAwBK,CAAK,CACpD,CAEA,eAAeO,GAA+C,CACxD,GAAA,CACI,MAAArB,EAAO,MAAMI,EAAS,EACxB,OAAAJ,GAAQA,EAAK,MACR,CAAE,MAAOA,EAAK,MAAO,OAAQA,EAAK,MAAO,EAEzC,WAEFe,EAAO,CACN,eAAA,MAAM,wBAAyBA,CAAK,EACrC,IAAA,CAEX,CAEA,eAAsBO,GAA4B,CAC5C,GAAA,CAAChB,GAAoB,CAACC,EAClB,MAAA,IAAI,MAAM,2BAA2B,EAG7C,MAAMgB,EAAkBZ,EAAe,EACvC,GAAIY,EAAiB,CACAP,EAAAO,EAAgB,MAAOA,EAAgB,MAAM,EAChE,MAAA,CAGI,MAAAC,EAAe,MAAMH,EAAc,EACrCG,GACSL,EAAAK,EAAa,MAAOA,EAAa,MAAM,EAC/BR,EAAAQ,EAAa,MAAOA,EAAa,MAAM,GAE1DR,EAAmB,yBAA0B,EAAE,CAEnD,CCxEO,SAASS,GAAa,CACrB,MAAAC,EAAO,SAAS,eAAe,mBAAmB,EAElDC,EAAoB,SAAS,cAAc,gBAAgB,EAKjE,GAJIA,IACFA,EAAkB,YAAc,IAAI,IAAI,KAAK,EAAE,aAAa,IAG1D,CAACD,EACH,OAGGA,EAAA,iBAAiB,SAAUE,CAAwB,EAExD,eAAeA,EAAyBC,EAA6B,CACnEA,EAAM,eAAe,EAGf,MAAAC,EADW,IAAI,SAASJ,CAAI,EACX,IAAI,OAAO,EAElC,GAAI,CAACI,GAAS,CAACC,EAAaD,CAAK,EAAG,CACjBzC,EAAA,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAAA,CACX,EACD,MAAA,CAGE,GAAA,CAMF,GALiB,MAAMc,EACrB,eACA,CAAE,MAAA2B,CAAM,CACV,IAEiB,OACT,MAAA,IAAI,MAAM,qBAAqB,EAGvCJ,EAAK,MAAM,EAEQ/B,EAAA,CACjB,MAAO,UACP,QAAS,6BACT,SAAU,UAAA,CACX,OACa,CACGN,EAAA,CACf,MAAO,QACP,QAAS,+CACT,SAAU,UAAA,CACX,CAAA,CACH,CAGF,SAAS0C,EAAaD,EAAwB,CAErC,MADc,2CACD,KAAKA,CAAK,CAAA,CAElC"}
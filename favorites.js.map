{"version":3,"file":"favorites.js","sources":["../src/html-gererators/favorites-exercises.ts","../src/js/init-favorites.ts","../src/favorites.ts"],"sourcesContent":["import { Exercise } from '../js/types/general.types';\nimport { capitalizeFirstLetter } from '../js/utils/capitalizeFirstLetter';\n\nexport function renderExerciseCard(exercise: Exercise): string {\n  const capitalizedName = capitalizeFirstLetter(exercise.name);\n  return `\n<li class=\"exercises-category-tile-item\" data-id=\"${exercise._id}\">\n                  <div class=\"exercises-category-tile-top\">\n                    <div class=\"exercises-category-tile-top-wrapper\">\n                    <span class=\"exercises-category-tile-badge\">WORKOUT</span>\n                    <button class=\"exercises-category-tile-button-delete\" aria-label=\"Remove from favorites\" data-id=\"${exercise._id}\" data-modal-ignore>\n                      <svg class=\"icon\" width=\"20\" height=\"20\">\n                        <use href=\"./img/sprite.svg#trash\"></use>\n                      </svg>\n                    </button>\n                    </div>\n                    <div class=\"exercises-category-tile-top-wrapper\">\n                    <span class=\"exercises-category-tile-start\">Start</span>\n                    <button class=\"exercises-category-tile-button-start\" aria-label=\"Start workout\">\n                      <svg class=\"icon\" width=\"20\" height=\"20\">\n                        <use href=\"./img/sprite.svg#arrow-right\"></use>\n                      </svg>\n                    </button>\n                    </div>\n\n                  </div>\n            \n                  <div class=\"exercises-category-tile-middle\">\n                    <div class=\"exercises-category-tile-man-icon-container\">\n                      <svg class=\"exercises-category-tile-man-icon\" width=\"24\" height=\"24\">\n                        <use href=\"./img/sprite.svg#running\"></use>\n                      </svg>\n                    </div>\n                    <h3 class=\"exercise-name\">${capitalizedName}</h3>\n                  </div>\n            \n                  <div class=\"exercises-category-tile-bottom\">\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Burned calories:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.burnedCalories} / ${exercise.time} min</span>\n                    </div>\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Body part:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.bodyPart}</span>\n                    </div>\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Target:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.target}</span>\n                    </div>\n                  </div>\n                </li>\n    `;\n}\n","import { Exercise } from './types/general.types';\nimport { YOUR_ENERGY_API_URL } from './constants/general';\nimport { renderExerciseCard } from '../html-gererators/favorites-exercises';\nimport { favoritesService } from '../services/favorites-service';\n\nexport function initFavorites(): void {\n  const favoritesOutputContainer = document.querySelector(\n    '.exercises-content'\n  ) as HTMLElement;\n  if (!favoritesOutputContainer) return;\n\n  async function fetchExerciseById(id: string): Promise<Exercise | null> {\n    try {\n      const res = await fetch(`${YOUR_ENERGY_API_URL}exercises/${id}`);\n      if (!res.ok) throw new Error('Exercise not found');\n      const data = await res.json();\n      return data;\n    } catch (error) {\n      console.error(`Failed to fetch exercise with id ${id}:`, error);\n      return null;\n    }\n  }\n\n  function deleteFavorite(id: string): void {\n    favoritesService.removeFavorite(id);\n  }\n\n  function attachDeleteListeners(): void {\n    const trashButtons =\n      favoritesOutputContainer.querySelectorAll<HTMLButtonElement>(\n        '.exercises-category-tile-button-delete'\n      );\n    trashButtons.forEach(button => {\n      button.addEventListener('click', () => {\n        const id = button.dataset.id;\n        if (!id) return;\n        deleteFavorite(id);\n      });\n    });\n  }\n\n  async function loadAndRenderFavorites(): Promise<void> {\n    const favoriteIds = favoritesService.getFavoriteIds();\n    console.log(favoriteIds);\n\n    const fetchPromises = favoriteIds.map(id => fetchExerciseById(id));\n    const results = await Promise.all(fetchPromises);\n    const validExercises = results.filter((ex): ex is Exercise => ex !== null);\n\n    if (validExercises.length === 0) {\n      favoritesOutputContainer.innerHTML = `\n        <p class=\"no-favorites\">\n          It appears that you haven't added any exercises to your favorites yet.\n          To get started, you can add exercises that you like to your favorites for easier access in the future.\n        </p>`;\n      return;\n    }\n\n    const markup = validExercises.map(renderExerciseCard).join('');\n    favoritesOutputContainer.innerHTML = `<ul class=\"exercises-list\">${markup}</ul>`;\n    attachDeleteListeners();\n  }\n\n  loadAndRenderFavorites();\n}\n","import { fetchQuote } from './js/quote';\nimport { initFooter } from './js/init-footer';\nimport { initFavorites } from './js/init-favorites';\nimport { initExerciseEvents } from './js/modal-controller';\nimport { FAVORITES_UPDATED_EVENT } from './services/favorites-service';\n\nfetchQuote();\ninitFavorites();\ninitFooter();\n\nconst favoritesContainer = document.querySelector('.favorites-list');\nif (favoritesContainer instanceof HTMLElement) {\n  initExerciseEvents(favoritesContainer);\n}\n\ndocument.addEventListener(FAVORITES_UPDATED_EVENT, () => {\n  initFavorites();\n});\n"],"names":["renderExerciseCard","exercise","capitalizedName","capitalizeFirstLetter","initFavorites","favoritesOutputContainer","fetchExerciseById","id","res","YOUR_ENERGY_API_URL","error","deleteFavorite","favoritesService","attachDeleteListeners","button","loadAndRenderFavorites","favoriteIds","fetchPromises","validExercises","ex","markup","fetchQuote","initFooter","favoritesContainer","initExerciseEvents","FAVORITES_UPDATED_EVENT"],"mappings":"wIAGO,SAASA,EAAmBC,EAA4B,CACvD,MAAAC,EAAkBC,EAAsBF,EAAS,IAAI,EACpD,MAAA;AAAA,oDAC2CA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA,wHAIwDA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuBpFC,CAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAMYD,EAAS,cAAc,MAAMA,EAAS,IAAI;AAAA;AAAA;AAAA;AAAA,2EAI1CA,EAAS,QAAQ;AAAA;AAAA;AAAA;AAAA,2EAIjBA,EAAS,MAAM;AAAA;AAAA;AAAA;AAAA,KAK1F,CC/CO,SAASG,GAAsB,CACpC,MAAMC,EAA2B,SAAS,cACxC,oBACF,EACA,GAAI,CAACA,EAA0B,OAE/B,eAAeC,EAAkBC,EAAsC,CACjE,GAAA,CACF,MAAMC,EAAM,MAAM,MAAM,GAAGC,CAAmB,aAAaF,CAAE,EAAE,EAC/D,GAAI,CAACC,EAAI,GAAU,MAAA,IAAI,MAAM,oBAAoB,EAE1C,OADM,MAAMA,EAAI,KAAK,QAErBE,EAAO,CACd,eAAQ,MAAM,oCAAoCH,CAAE,IAAKG,CAAK,EACvD,IAAA,CACT,CAGF,SAASC,EAAeJ,EAAkB,CACxCK,EAAiB,eAAeL,CAAE,CAAA,CAGpC,SAASM,GAA8B,CAEnCR,EAAyB,iBACvB,wCACF,EACW,QAAkBS,GAAA,CACtBA,EAAA,iBAAiB,QAAS,IAAM,CAC/B,MAAAP,EAAKO,EAAO,QAAQ,GACrBP,GACLI,EAAeJ,CAAE,CAAA,CAClB,CAAA,CACF,CAAA,CAGH,eAAeQ,GAAwC,CAC/C,MAAAC,EAAcJ,EAAiB,eAAe,EACpD,QAAQ,IAAII,CAAW,EAEvB,MAAMC,EAAgBD,EAAY,IAAUT,GAAAD,EAAkBC,CAAE,CAAC,EAE3DW,GADU,MAAM,QAAQ,IAAID,CAAa,GAChB,OAAQE,GAAuBA,IAAO,IAAI,EAErE,GAAAD,EAAe,SAAW,EAAG,CAC/Bb,EAAyB,UAAY;AAAA;AAAA;AAAA;AAAA,cAKrC,MAAA,CAGF,MAAMe,EAASF,EAAe,IAAIlB,CAAkB,EAAE,KAAK,EAAE,EACpCK,EAAA,UAAY,8BAA8Be,CAAM,QACnDP,EAAA,CAAA,CAGDE,EAAA,CACzB,CC1DAM,EAAW,EACXjB,EAAc,EACdkB,EAAW,EAEX,MAAMC,EAAqB,SAAS,cAAc,iBAAiB,EAC/DA,aAA8B,aAChCC,EAAmBD,CAAkB,EAGvC,SAAS,iBAAiBE,EAAyB,IAAM,CACzCrB,EAAA,CAChB,CAAC"}
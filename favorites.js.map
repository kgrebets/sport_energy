{"version":3,"file":"favorites.js","sources":["../src/html-gererators/favorites-exercises.ts","../src/js/init-favorites.ts","../src/favorites.ts"],"sourcesContent":["import { Exercise } from '../js/types/general.types';\n\n\nexport function renderExerciseCard(exercise: Exercise): string {\n    return `\n<li class=\"exercises-category-tile-item\" data-id=\"${exercise._id}\">\n                  <div class=\"exercises-category-tile-top\">\n                    <div class=\"exercises-category-tile-top-wrapper\">\n                    <span class=\"exercises-category-tile-badge\">WORKOUT</span>\n                    <button class=\"exercises-category-tile-button-delete\" aria-label=\"Remove from favorites\" data-id=\"${exercise._id}\">\n                      <svg class=\"icon\" width=\"20\" height=\"20\">\n                        <use href=\"./img/sprite.svg#trash\"></use>\n                      </svg>\n                    </button>\n                    </div>\n                    <div class=\"exercises-category-tile-top-wrapper\">\n                    <span class=\"exercises-category-tile-start\">Start</span>\n                    <button class=\"exercises-category-tile-button-start\" aria-label=\"Start workout\">\n                      <svg class=\"icon\" width=\"20\" height=\"20\">\n                        <use href=\"./img/sprite.svg#arrow-right\"></use>\n                      </svg>\n                    </button>\n                    </div>\n\n                  </div>\n            \n                  <div class=\"exercises-category-tile-middle\">\n                    <div class=\"exercises-category-tile-man-icon-container\">\n                      <svg class=\"exercises-category-tile-man-icon\" width=\"24\" height=\"24\">\n                        <use href=\"./img/sprite.svg#running\"></use>\n                      </svg>\n                    </div>\n                    <h3 class=\"exercise-name\">${exercise.name}</h3>\n                  </div>\n            \n                  <div class=\"exercises-category-tile-bottom\">\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Burned calories:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.burnedCalories} / ${exercise.time} min</span>\n                    </div>\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Body part:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.bodyPart}</span>\n                    </div>\n                    <div class=\"exercises-category-tile-bottom-item\">\n                      <span class=\"exercises-category-tile-bottom-title\">Target:</span>\n                      <span class=\"exercises-category-tile-bottom-value\">${exercise.target}</span>\n                    </div>\n                  </div>\n                </li>\n    `;\n}\n\n // Check isDesktop\n function isDesktop(): boolean {\n    return window.innerWidth >= 1024;\n}\n\nfunction isTablet(): boolean {\n    return window.innerWidth >= 768 && window.innerWidth < 1024;\n  }\n  \n\nexport function renderFavorites(data: Exercise[], container: HTMLElement): void {\n    if (!data || data.length === 0) {\n        container.innerHTML = `\n        <p class=\"no-favorites\">\n          It appears that you haven't added any exercises to your favorites yet.\n          To get started, you can add exercises that you like to your favorites for easier access in the future.\n        </p>\n      `;\n        return;\n    }\n\n\n    let itemsPerPage = 8;\n    let currentPage = 1;\n    let visibleItems: Exercise[];\n    let totalPages = 1;\n\n    if (isDesktop()) {\n        visibleItems = data;\n    } else {\n        if (isTablet()) {\n            itemsPerPage = 10;\n        }\n        totalPages = Math.ceil(data.length / itemsPerPage);\n        const startIndex = (currentPage - 1) * itemsPerPage;\n        const endIndex = startIndex + itemsPerPage;\n        visibleItems = data.slice(startIndex, endIndex);\n    }\n\n    const markup = visibleItems.map(renderExerciseCard).join('');\n    if (isDesktop()) {\n        container.innerHTML = `\n            <div class=\"exercises-scroll-container\">\n                <ul class=\"exercises-list\">${markup}</ul>\n            </div>\n        `;\n    } else {\n        container.innerHTML = `<ul class=\"exercises-list\">${markup}</ul>`;\n    }\n\n    // Add pagination\n    if (!isDesktop()) {\n        const paginationContainer = document.createElement('div');\n        paginationContainer.classList.add('pagination');\n        for (let i = 1; i <= totalPages; i++) {\n            const pageButton = document.createElement('button');\n            pageButton.classList.add('pagination-btn');\n            if (i === currentPage) {\n                pageButton.classList.add('active');\n            }\n            pageButton.textContent = i.toString();\n            pageButton.dataset.page = i.toString();\n            paginationContainer.appendChild(pageButton);\n        }\n        container.appendChild(paginationContainer);\n    }\n}","import { Exercise } from \"./types/general.types\";\nimport { renderExerciseCard } from \"../html-gererators/favorites-exercises\";\nimport { renderFavorites } from \"../html-gererators/favorites-exercises\";\n\nexport function initFavorites(): void {\n  const favoritesOutputContainer = document.querySelector('.exercises-content') as HTMLElement;\n\n  function loadFavorites(): Exercise[] {\n    try {\n      const favoritesData = JSON.parse(localStorage.getItem('favorites') || '[]') as Exercise[];\n      return favoritesData;\n\n    } catch (error) {\n      return [];\n    }\n  }\n\n  function deleteFavorite(id: string): void {\n    const storedFavorites = JSON.parse(localStorage.getItem('favorites') || '[]') as Exercise[];\n    const updatedFavorites = storedFavorites.filter(exercise => exercise._id !== id);\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n    renderFavorites(updatedFavorites, favoritesOutputContainer);\n    attachDeleteListeners();\n  }\n\n  function attachDeleteListeners(): void {\n    const trashButtons = favoritesOutputContainer.querySelectorAll<HTMLButtonElement>(\n      '.exercises-category-tile-button-delete'\n    );\n\n    trashButtons.forEach(button => {\n      button.addEventListener('click', () => {\n        const id = button.dataset.id;\n        if (!id) return;\n        deleteFavorite(id);\n      });\n    });\n  }\n\n  renderFavorites(loadFavorites(), favoritesOutputContainer);\n    attachDeleteListeners();\n\n\n\n}\n\n","import { fetchQuote } from \"./js/quote\";\nimport { initFooter } from './js/init-footer';\nimport { initFavorites } from \"./js/init-favorites\";\n\n\nfetchQuote();\ninitFavorites();    \ninitFooter();"],"names":["renderExerciseCard","exercise","isDesktop","isTablet","renderFavorites","data","container","itemsPerPage","currentPage","visibleItems","totalPages","startIndex","endIndex","markup","paginationContainer","i","pageButton","initFavorites","favoritesOutputContainer","loadFavorites","deleteFavorite","id","updatedFavorites","attachDeleteListeners","button","fetchQuote","initFooter"],"mappings":"gGAGO,SAASA,EAAmBC,EAA4B,CACpD,MAAA;AAAA,oDACyCA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA,wHAIwDA,EAAS,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAuBpFA,EAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2EAMcA,EAAS,cAAc,MAAMA,EAAS,IAAI;AAAA;AAAA;AAAA;AAAA,2EAI1CA,EAAS,QAAQ;AAAA;AAAA;AAAA;AAAA,2EAIjBA,EAAS,MAAM;AAAA;AAAA;AAAA;AAAA,KAK1F,CAGC,SAASC,GAAqB,CAC3B,OAAO,OAAO,YAAc,IAChC,CAEA,SAASC,GAAoB,CACzB,OAAO,OAAO,YAAc,KAAO,OAAO,WAAa,IACzD,CAGc,SAAAC,EAAgBC,EAAkBC,EAA8B,CAC5E,GAAI,CAACD,GAAQA,EAAK,SAAW,EAAG,CAC5BC,EAAU,UAAY;AAAA;AAAA;AAAA;AAAA;AAAA,QAMtB,MAAA,CAIJ,IAAIC,EAAe,EACfC,EAAc,EACdC,EACAC,EAAa,EAEjB,GAAIR,IACeO,EAAAJ,MACZ,CACCF,MACeI,EAAA,IAEnBG,EAAa,KAAK,KAAKL,EAAK,OAASE,CAAY,EAC3C,MAAAI,GAAcH,EAAc,GAAKD,EACjCK,EAAWD,EAAaJ,EACfE,EAAAJ,EAAK,MAAMM,EAAYC,CAAQ,CAAA,CAGlD,MAAMC,EAASJ,EAAa,IAAIT,CAAkB,EAAE,KAAK,EAAE,EAYvD,GAXAE,IACAI,EAAU,UAAY;AAAA;AAAA,6CAEeO,CAAM;AAAA;AAAA,UAIjCP,EAAA,UAAY,8BAA8BO,CAAM,QAI1D,CAACX,IAAa,CACR,MAAAY,EAAsB,SAAS,cAAc,KAAK,EACpCA,EAAA,UAAU,IAAI,YAAY,EAC9C,QAASC,EAAI,EAAGA,GAAKL,EAAYK,IAAK,CAC5B,MAAAC,EAAa,SAAS,cAAc,QAAQ,EACvCA,EAAA,UAAU,IAAI,gBAAgB,EACrCD,IAAMP,GACKQ,EAAA,UAAU,IAAI,QAAQ,EAE1BA,EAAA,YAAcD,EAAE,SAAS,EACzBC,EAAA,QAAQ,KAAOD,EAAE,SAAS,EACrCD,EAAoB,YAAYE,CAAU,CAAA,CAE9CV,EAAU,YAAYQ,CAAmB,CAAA,CAEjD,CCnHO,SAASG,GAAsB,CAC9B,MAAAC,EAA2B,SAAS,cAAc,oBAAoB,EAE5E,SAASC,GAA4B,CAC/B,GAAA,CAEK,OADe,KAAK,MAAM,aAAa,QAAQ,WAAW,GAAK,IAAI,OAG5D,CACd,MAAO,CAAC,CAAA,CACV,CAGF,SAASC,EAAeC,EAAkB,CAExC,MAAMC,EADkB,KAAK,MAAM,aAAa,QAAQ,WAAW,GAAK,IAAI,EACnC,OAAmBrB,GAAAA,EAAS,MAAQoB,CAAE,EAC/E,aAAa,QAAQ,YAAa,KAAK,UAAUC,CAAgB,CAAC,EAClElB,EAAgBkB,EAAkBJ,CAAwB,EACpCK,EAAA,CAAA,CAGxB,SAASA,GAA8B,CAChBL,EAAyB,iBAC5C,wCACF,EAEa,QAAkBM,GAAA,CACtBA,EAAA,iBAAiB,QAAS,IAAM,CAC/B,MAAAH,EAAKG,EAAO,QAAQ,GACrBH,GACLD,EAAeC,CAAE,CAAA,CAClB,CAAA,CACF,CAAA,CAGajB,EAAAe,IAAiBD,CAAwB,EACjCK,EAAA,CAI1B,CCvCAE,EAAW,EACXR,EAAc,EACdS,EAAW"}
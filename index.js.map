{"version":3,"file":"index.js","sources":["../src/services/filter-service.ts","../src/html-gererators/filter-html-generator.ts","../src/html-gererators/exercises-markup.ts","../src/js/utils/scrollToContent.ts","../src/js/init-filter.ts","../src/main.ts"],"sourcesContent":["import { makeGetRequest } from \"../js/services/request\";\nimport { FilterRequest } from \"../js/types/request.types\";\nimport { FiltersResponse } from \"../js/types/response.types\";\n\nexport async function getFilters(filterRequest: FilterRequest): Promise<FiltersResponse> {\n    const response = await makeGetRequest<FilterRequest, FiltersResponse>(\"filters\", filterRequest);\n    if (!response) {\n        throw new Error(\"Cant' get filters\");\n    }\n    return response;\n}","import { FilterResponse } from \"../js/types/response.types\";\n\nexport function generateFiltersHtml(items: FilterResponse[]) {\n  return items.map(item => `\n          <li class=\"filter-card\" data-filter-type=\"${item.filter}\" data-filter-name=\"${item.name}\">\n            <img src=\"${item.imgURL}\" alt=\"${item.name}\" />\n            <div class=\"filter-info\">\n              <div class=\"filter-name\">${item.name}</div>\n              <div class=\"filter-type\">${item.filter}</div>\n            </div>\n          </li>\n        `)\n    .join('');\n}\n\nexport function generatePaginationHtml(totalPages: number, currentPage: number): string {\n  const pagesToShow: number[] = [];\n\n  const maxVisible = 3;\n  let startPage = Math.max(1, currentPage - 1);\n  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n\n  if (endPage - startPage + 1 < maxVisible) {\n    startPage = Math.max(1, endPage - maxVisible + 1);\n  }\n\n  for (let page = startPage; page <= endPage; page++) {\n    pagesToShow.push(page);\n  }\n\n  return pagesToShow.map(page => `\n    <li class=\"pagination-page${page === currentPage ? ' active' : ''}\" data-page=\"${page}\">${page}</li>\n  `).join('');\n}\n","import { capitalizeFirstLetter } from '../js/utils/capitalizeFirstLetter';\n\nexport function exercisesMarkup(\n  rating: number,\n  name: string,\n  burnedCalories: string,\n  bodyPart: string,\n  target: string,\n  _id: string\n): string {\n  const capitalizedName = capitalizeFirstLetter(name);\n  const iconId = bodyPart.toLowerCase() === 'cardio' ? 'running' : 'fluent-food';\n\n  const spriteBasePath = `${import.meta.env.BASE_URL}img/sprite.svg`;\n  return `\n<li class=\"exercises-category-tile-item\">\n  <div class=\"exercises-category-tile-top\">\n    <div class=\"exercises-category-tile-workout-wrapper\">\n      <span class=\"exercises-category-tile-badge\">\n        WORKOUT\n      </span>\n      <div class=\"exercises-category-tile-rating-wrapper\">\n        <span class=\"exercises-category-tile-rating\">${rating.toFixed(1)}</span>\n        <svg class=\"exercises-category-tile-star-icon\" width=\"16\" height=\"16\">\n          <use href=\"${spriteBasePath}#Star\"></use>\n        </svg>\n      </div>\n    </div>\n    <button class=\"exercises-category-tile-button\" data-id=\"${_id}\">\n      Start\n      <svg class=\"exercises-category-tile-arrow-icon\" width=\"16\" height=\"16\">\n        <use href=\"${spriteBasePath}#arrow-right\"></use>\n      </svg>\n    </button>\n  </div>\n  <div class=\"exercises-category-tile-middle\">\n    <div class=\"exercises-category-tile-man-icon-container\">\n      <svg class=\"exercises-category-tile-man-icon\" width=\"16\" height=\"16\">\n        <use href=\"${spriteBasePath}#${iconId}\"></use>\n      </svg>\n    </div>\n    <h3 class=\"exercises-category-tile-name\">${capitalizedName}</h3>\n  </div>\n  <ul class=\"exercises-category-tile-bottom\">\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Burned calories:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${burnedCalories}</span>\n      </li>\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Body part:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${bodyPart}</span>\n      </li>\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Target:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${target}</span>\n      </li>\n  </ul>\n</li>`;\n}\n","export function scrollToContent(querySelector: string) {\n  const element = document.querySelector(querySelector);\n  element?.scrollIntoView({ behavior: \"smooth\" });\n}","import { getFilters } from '../services/filter-service';\nimport { generateFiltersHtml, generatePaginationHtml } from '../html-gererators/filter-html-generator';\nimport { showErrorMessage, showInfoMessage } from './utils/toasts';\nimport { FilterType } from './types/general.types';\nimport { exercisesMarkup } from '../html-gererators/exercises-markup';\nimport { ExercisesRequest } from './types/request.types';\nimport { ExercisesResponse } from './types/response.types';\nimport { getExercises } from '../services/ exercises-service';\nimport { scrollToContent } from './utils/scrollToContent';\n\nexport function initFilters(): void {\n  const scrollToQuerySelector = '.exercises-header';\n  const filtersOutputContainer = document.querySelector('.filters-output') as HTMLElement;\n  const tabsContainer = document.querySelector('.filter-tabs') as HTMLElement;\n  const paginationContainer = document.querySelector('.filter-pagination') as HTMLElement;\n  const exercisesListContainer = document.querySelector('.exercises-list') as HTMLElement;\n  const exercisesPaginationContainer = document.querySelector('.exercises-pagination') as HTMLElement;\n  const exercisesFiltersForm = document.querySelector('.exercises-filters-form') as HTMLFormElement;\n  const subHeaderContainer = document.querySelector('.exercises-subheader-container') as HTMLElement;\n\n  if (!filtersOutputContainer) throw new Error('Can\\'t find .filters-output');\n  if (!tabsContainer) throw new Error('Can\\'t find .filter-tabs');\n  if (!paginationContainer) throw new Error('Can\\'t find .filter-pagination');\n  if (!exercisesFiltersForm) throw new Error('Can\\'t find .exercises-filters-form');\n  if (!subHeaderContainer) throw new Error('Can\\'t find .exercises-subheader-container');\n\n  let currentFilter = (tabsContainer.querySelector('.active') as HTMLElement)?.dataset.filter as FilterType;\n  let currentPage = 1;\n  let currentKeyword = \"\";\n  let currentFilterKey: string;\n  let currentFilterName: string;\n\n  exercisesFiltersForm.addEventListener('submit', (e: Event) => {\n    e.preventDefault();\n\n    const formData = new FormData(exercisesFiltersForm);\n    currentKeyword = formData.get('keyword') as string;\n\n    loadExercises(currentFilterKey, currentFilterName, currentPage, false);\n  });\n\n  function loadFilters(filter: FilterType, page: number, withScroll = true): void {\n    const limit = 12;\n    filtersOutputContainer.innerHTML = '';\n    paginationContainer.innerHTML = '';\n\n    getFilters({ filter, page, limit })\n      .then(response => {\n        filtersOutputContainer.innerHTML = generateFiltersHtml(response.results);\n        paginationContainer.innerHTML = generatePaginationHtml(response.totalPages, page);\n        filtersOutputContainer.style.display = 'flex';\n        paginationContainer.style.display = 'flex';\n\n        setExercisesSubheader(null);\n\n        exercisesListContainer.style.display = 'none';\n        exercisesPaginationContainer.style.display = 'none';\n        exercisesFiltersForm.style.display = 'none';\n        exercisesFiltersForm.reset();\n        currentKeyword = \"\";\n\n        attachFilterCardClickHandlers();\n\n        if (withScroll) {\n          scrollToContent(scrollToQuerySelector);\n        }\n      })\n      .catch(error => showErrorMessage({\n        title: 'Error',\n        message: error.message,\n        position: 'topRight',\n      }));\n  }\n\n  async function loadExercises(\n    filterKey: string,\n    filterValue: string,\n    page: number,\n    withScroll = true\n  ): Promise<void> {\n    if (!exercisesListContainer || !exercisesPaginationContainer) return;\n    const limit = 10;\n    const requestParams: Partial<ExercisesRequest> = {\n      [filterKey]: filterValue,\n      page,\n      limit,\n      keyword: currentKeyword,\n    };\n    try {\n      const response: ExercisesResponse = await getExercises(requestParams);\n      const markup = response.results\n        .map(ex =>\n          exercisesMarkup(\n            ex.rating,\n            ex.name,\n            `${ex.burnedCalories} kcal`,\n            ex.bodyPart,\n            ex.target,\n            ex._id,\n          ),\n        )\n        .join('');\n      exercisesListContainer.innerHTML = markup;\n      exercisesPaginationContainer.innerHTML = generatePaginationHtml(\n        response.totalPages,\n        response.page,\n      );\n\n      exercisesFiltersForm.style.display = 'flex';\n      exercisesListContainer.style.display = 'flex';\n      exercisesPaginationContainer.style.display = 'flex';\n\n      attachExercisesPaginationHandlers(filterKey, filterValue);\n\n      if (response.results.length === 0) {\n        showInfoMessage({\n          title: \"\",\n          message: \" No excersies found\",\n          position: 'topRight'\n        });\n      }\n\n      if (withScroll) {\n        scrollToContent(scrollToQuerySelector);\n      }\n    } catch (error: any) {\n      showErrorMessage({\n        title: 'Error',\n        message: error?.message || 'Failed to load exercises',\n        position: 'topRight',\n      });\n    }\n  }\n\n  function attachFilterCardClickHandlers(): void {\n    const filterCards = filtersOutputContainer!.querySelectorAll('.filter-card');\n    filterCards.forEach(card => {\n      card.addEventListener('click', () => {\n        const filterType = card.getAttribute('data-filter-type') as string;\n        const filterName = card.getAttribute('data-filter-name') as string;\n        if (!filterType || !filterName) return;\n        currentPage = 1;\n\n        let key: string;\n        if (filterType === 'Muscles') {\n          key = 'muscles';\n        } else if (filterType === 'Body parts') {\n          key = 'bodypart';\n        } else if (filterType === 'Equipment') {\n          key = 'equipment';\n        } else {\n          return;\n        }\n\n        if (filtersOutputContainer && paginationContainer) {\n          filtersOutputContainer.innerHTML = '';\n          filtersOutputContainer.style.display = 'none';\n          paginationContainer.innerHTML = '';\n          paginationContainer.style.display = 'none';\n        }\n\n        setExercisesSubheader(filterName);\n\n        currentFilterKey = key;\n        currentFilterName = filterName.toLowerCase();\n\n        loadExercises(key, currentFilterName, currentPage);\n      });\n    });\n  }\n\n  function setExercisesSubheader(subheader: string | null) {\n    subHeaderContainer.innerHTML = subheader\n      ? ` / <span class=\"exercises-subheader\">${subheader}</span>`\n      : \"\";\n  }\n\n  function attachExercisesPaginationHandlers(\n    filterKey: string,\n    filterValue: string\n  ): void {\n    const paginationPages =\n      exercisesPaginationContainer!.querySelectorAll('.pagination-page');\n    paginationPages.forEach(pageEl => {\n      pageEl.addEventListener('click', () => {\n        const newPage = Number(pageEl.getAttribute('data-page'));\n        if (!newPage || newPage === currentPage) return;\n        currentPage = newPage;\n        loadExercises(filterKey, filterValue, currentPage);\n      });\n    });\n  }\n\n  tabsContainer.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n\n    if (target.tagName.toLowerCase() !== 'button') return;\n\n    const newFilter = target.dataset.filter as FilterType;\n    if (!newFilter || newFilter === currentFilter) return;\n\n    tabsContainer.querySelectorAll('button').forEach(t => t.classList.remove('active'));\n    target.classList.add('active');\n\n    currentFilter = newFilter;\n    currentPage = 1;\n\n    loadFilters(currentFilter, currentPage);\n  });\n\n  paginationContainer.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n    if (target.tagName.toLowerCase() !== 'li') return;\n\n    const newPage = Number(target.dataset.page);\n    if (!newPage || newPage === currentPage) return;\n\n    currentPage = newPage;\n    loadFilters(currentFilter, currentPage);\n  });\n\n  loadFilters(currentFilter, currentPage, false);\n}","import { initFilters } from './js/init-filter';\nimport { fetchQuote } from './js/quote';\nimport { initFooter } from './js/init-footer';\nimport { initExerciseEvents } from './js/modal-controller';\nimport { initScrollTop } from './js/init-scroll-top';\n\ninitFilters();\nfetchQuote();\ninitFooter();\n\nconst exercisesContainer = document.querySelector('.exercises-content');\nif (exercisesContainer instanceof HTMLElement) {\n  initExerciseEvents(exercisesContainer);\n}\n\ninitScrollTop();"],"names":["getFilters","filterRequest","response","makeGetRequest","generateFiltersHtml","items","item","generatePaginationHtml","totalPages","currentPage","pagesToShow","startPage","endPage","page","exercisesMarkup","rating","name","burnedCalories","bodyPart","target","_id","capitalizedName","capitalizeFirstLetter","iconId","spriteBasePath","scrollToContent","querySelector","element","initFilters","scrollToQuerySelector","filtersOutputContainer","tabsContainer","paginationContainer","exercisesListContainer","exercisesPaginationContainer","exercisesFiltersForm","subHeaderContainer","currentFilter","_a","currentKeyword","currentFilterKey","currentFilterName","e","loadExercises","loadFilters","filter","withScroll","setExercisesSubheader","attachFilterCardClickHandlers","error","showErrorMessage","filterKey","filterValue","limit","requestParams","getExercises","markup","ex","attachExercisesPaginationHandlers","showInfoMessage","card","filterType","filterName","key","subheader","pageEl","newPage","event","newFilter","t","fetchQuote","initFooter","exercisesContainer","initExerciseEvents","initScrollTop"],"mappings":"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"}
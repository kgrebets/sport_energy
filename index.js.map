{"version":3,"file":"index.js","sources":["../src/js/constants/general.ts","../src/js/utils/toasts.ts","../src/js/services/request.ts","../src/services/filter-service.ts","../src/html-gererators/filter-html-generator.ts","../src/js/init-filter.ts","../src/main.ts"],"sourcesContent":["export const YOUR_ENERGY_API_URL = 'https://your-energy.b.goit.study/api/';","import iziToast from \"izitoast\";\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport const showErrorMessage = (\n  {\n    title,\n    message,\n    position,\n    ...otherOptions\n  } = {\n    title: 'Error',\n    message: 'Something went wrong. Please try again later.',\n    position: 'topRight'\n  }) => {\n  iziToast.error({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions\n  });\n}","import axios from \"axios\";\nimport {YOUR_ENERGY_API_URL} from \"../constants/general\";\nimport {showErrorMessage} from \"../utils/toasts\";\n// TODO: Example of request. Remove when go live.\n// import {ExercisesRequest, ExercisesResponse, FilterRequest, FilterResponse} from \"../types/api-types\";\n\n/**\n * Makes an asynchronous HTTP GET request to the specified API endpoint and retrieves data.\n *\n * @template T - The type of the requestData parameter.\n * @template K - The type of the data expected in the response.\n *\n * @param {string} endpoint - The API endpoint to which the GET request is sent.\n * @param {Partial<T>} requestData - An object containing query parameters for the GET request.\n *\n * @returns {Promise<K>} A promise that resolves to the data retrieved from the API response.\n */\nexport const makeGetRequest = async <T, K>(endpoint: string, requestData: Partial<T>): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.get<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, {\n      params: requestData\n    });\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous POST request to a specified API endpoint with the provided request data,\n * and returns the response data.\n *\n * @template T The type of the request data to be sent in the POST request.\n * @template K The type of the response data expected from the POST request.\n *\n * @param {string} endpoint The API endpoint to which the POST request will be sent.\n * @param {T} requestData The data to be sent in the body of the POST request.\n *\n * @returns {Promise<K>} A promise that resolves to the response data from the server.\n */\nexport const makePostRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.post<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous HTTP PATCH request to the specified API endpoint.\n *\n * @template T The type of the request payload.\n * @template K The expected type of the response data.\n *\n * @param {string} endpoint - The API endpoint to which the PATCH request will be sent, appended to the base URL.\n * @param {T} requestData - The payload to be sent with the PATCH request.\n * @returns {Promise<K>} A promise that resolves to the response data of type K.\n *\n * @throws {Error} Throws an error if the HTTP request fails or if there is an issue with the response.\n */\nexport const makePatchRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.patch<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n// TODO: Example of request. Remove when go live.\n// makeGetRequest<ExercisesRequest, ExercisesResponse>('exercises', {\n//   bodypart: 'back',\n//   muscles: 'abductors',\n//   equipment: 'band',\n//   keyword: 'back',\n//   page: 1,\n//   limit: 10,\n// }).then(data => console.log('Exercises', data));\n//\n// makeGetRequest<FilterRequest, FilterResponse>('exercises', {\n//   filter: 'Body parts',\n//   page: 1,\n//   limit: 12,\n// }).then(data => console.log('Filters', data));","import { makeGetRequest } from \"../js/services/request\";\nimport { FilterRequest } from \"../js/types/request.types\";\nimport { FiltersResponse } from \"../js/types/response.types\";\n\nexport async function getFilters(filterRequest: FilterRequest): Promise<FiltersResponse> {\n    const response = await makeGetRequest<FilterRequest, FiltersResponse>(\"filters\", filterRequest);\n    if (!response) {\n        throw new Error(\"Cant' get filters\");\n    }\n    return response;\n}","import { FilterResponse } from \"../js/types/response.types\";\n\nexport function generateFiltersHtml(items: FilterResponse[]) {\n  return items.map(item => `\n          <div class=\"filter-card\">\n            <img src=\"${item.imgURL}\" alt=\"${item.name}\" />\n            <div class=\"filter-info\">\n              <div class=\"filter-name\">${item.name}</div>\n              <div class=\"filter-type\">${item.filter}</div>\n            </div>\n          </div>\n        `)\n    .join('');\n}\n\nexport function generatePaginationHtml(totalPages: number, currentPage: number): string {\n  const pagesToShow: number[] = [];\n\n  const maxVisible = 3;\n  let startPage = Math.max(1, currentPage - 1);\n  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n\n  if (endPage - startPage + 1 < maxVisible) {\n    startPage = Math.max(1, endPage - maxVisible + 1);\n  }\n\n  for (let page = startPage; page <= endPage; page++) {\n    pagesToShow.push(page);\n  }\n\n  return pagesToShow.map(page => `\n    <span class=\"pagination-page${page === currentPage ? ' active' : ''}\" data-page=\"${page}\">${page}</span>\n  `).join('');\n}\n","import { getFilters } from '../services/filter-service';\nimport { generateFiltersHtml, generatePaginationHtml } from '../html-gererators/filter-html-generator';\nimport { showErrorMessage } from './utils/toasts';\nimport { FilterType } from './types/general.types';\n\nexport function initFilters() {\n    const filtersOutputContainer = document.querySelector('.filters-output');\n    const tabsContainer = document.querySelector('.filter-tabs');\n    const paginationContainer = document.querySelector('.filter-pagination');\n\n    if (!filtersOutputContainer) throw new Error(\"Can't find .filters-output\");\n    if (!tabsContainer) throw new Error(\"Can't find .filter-tabs\");\n    if (!paginationContainer) throw new Error(\"Can't find .filter-pagination\");\n\n    let currentFilter = (tabsContainer.querySelector('.active') as HTMLElement)?.dataset.filter as FilterType;\n    let currentPage = 1;\n\n    function loadFilters(filter: FilterType, page: number) {\n        const limit = 12;\n\n        getFilters({ filter, page, limit })\n            .then(response => {\n                filtersOutputContainer!.innerHTML = generateFiltersHtml(response.results);\n                paginationContainer!.innerHTML = generatePaginationHtml(response.totalPages, page);\n            })\n            .catch(error => showErrorMessage({\n                title: 'Error',\n                message: error.message,\n                position: 'topRight',\n            }));\n    }\n\n    tabsContainer.addEventListener('click', (event) => {\n        const target = event.target as HTMLElement;\n\n        if (target.tagName.toLowerCase() !== 'li') return;\n\n        const newFilter = target.dataset.filter as FilterType;\n        if (!newFilter || newFilter === currentFilter) return;\n\n        tabsContainer.querySelectorAll('li').forEach(t => t.classList.remove('active'));\n        target.classList.add('active');\n\n        currentFilter = newFilter;\n        currentPage = 1;\n\n        loadFilters(currentFilter, currentPage);\n    });\n\n    paginationContainer.addEventListener('click', (event) => {\n        const target = event.target as HTMLElement;\n        if (target.tagName.toLowerCase() !== 'span') return;\n\n        const newPage = Number(target.dataset.page);\n        if (!newPage || newPage === currentPage) return;\n\n        currentPage = newPage;\n        loadFilters(currentFilter, currentPage);\n    });\n\n    loadFilters(currentFilter, currentPage);\n}","import { initFilters } from \"./js/init-filter\";\n\ninitFilters();"],"names":["YOUR_ENERGY_API_URL","showErrorMessage","title","message","position","otherOptions","iziToast","makeGetRequest","endpoint","requestData","data","axios","e","getFilters","filterRequest","response","generateFiltersHtml","items","item","generatePaginationHtml","totalPages","currentPage","pagesToShow","startPage","endPage","page","initFilters","filtersOutputContainer","tabsContainer","paginationContainer","currentFilter","_a","loadFilters","filter","error","event","target","newFilter","t","newPage"],"mappings":"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"}
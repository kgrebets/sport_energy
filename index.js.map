{"version":3,"file":"index.js","sources":["../src/js/constants/general.ts","../src/js/utils/toasts.ts","../src/js/services/request.ts","../src/services/filter-service.ts","../src/html-gererators/filter-html-generator.ts","../src/html-gererators/exercises-markup.ts","../src/services/ exercises-service.ts","../src/js/init-filter.ts","../src/services/quote-service.ts","../src/js/quote.ts","../src/js/init-footer.ts","../src/main.ts"],"sourcesContent":["export const YOUR_ENERGY_API_URL = 'https://your-energy.b.goit.study/api/';","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nexport const showErrorMessage = (\n  { title, message, position, ...otherOptions } = {\n    title: 'Error',\n    message: 'Something went wrong. Please try again later.',\n    position: 'topRight',\n  }\n) => {\n  iziToast.error({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n\nexport const showSuccessMessage = (\n  { title, message, position, ...otherOptions } = {\n    title: 'Success',\n    message: 'Operation completed successfully.',\n    position: 'topRight',\n  }\n) => {\n  iziToast.success({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n\nexport const showInfoMessage = (\n  { title, message, position, ...otherOptions }\n) => {\n  iziToast.info({\n    title: title,\n    message: message,\n    position: position,\n    ...otherOptions,\n  });\n};\n","import axios from \"axios\";\nimport {YOUR_ENERGY_API_URL} from \"../constants/general\";\nimport {showErrorMessage} from \"../utils/toasts\";\n// TODO: Example of request. Remove when go live.\n// import {ExercisesRequest, ExercisesResponse, FilterRequest, FilterResponse} from \"../types/api-types\";\n\n/**\n * Makes an asynchronous HTTP GET request to the specified API endpoint and retrieves data.\n *\n * @template T - The type of the requestData parameter.\n * @template K - The type of the data expected in the response.\n *\n * @param {string} endpoint - The API endpoint to which the GET request is sent.\n * @param {Partial<T>} requestData - An object containing query parameters for the GET request.\n *\n * @returns {Promise<K>} A promise that resolves to the data retrieved from the API response.\n */\nexport const makeGetRequest = async <T, K>(endpoint: string, requestData?: Partial<T>): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.get<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, {\n      params: requestData\n    });\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous POST request to a specified API endpoint with the provided request data,\n * and returns the response data.\n *\n * @template T The type of the request data to be sent in the POST request.\n * @template K The type of the response data expected from the POST request.\n *\n * @param {string} endpoint The API endpoint to which the POST request will be sent.\n * @param {T} requestData The data to be sent in the body of the POST request.\n *\n * @returns {Promise<K>} A promise that resolves to the response data from the server.\n */\nexport const makePostRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.post<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n/**\n * Sends an asynchronous HTTP PATCH request to the specified API endpoint.\n *\n * @template T The type of the request payload.\n * @template K The expected type of the response data.\n *\n * @param {string} endpoint - The API endpoint to which the PATCH request will be sent, appended to the base URL.\n * @param {T} requestData - The payload to be sent with the PATCH request.\n * @returns {Promise<K>} A promise that resolves to the response data of type K.\n *\n * @throws {Error} Throws an error if the HTTP request fails or if there is an issue with the response.\n */\nexport const makePatchRequest = async <T, K>(endpoint: string, requestData: T): Promise<K | undefined> => {\n  try {\n    const { data } = await axios.patch<K>(`${YOUR_ENERGY_API_URL}${endpoint}`, requestData);\n\n    return data;\n  } catch (e) {\n    console.error(e);\n    showErrorMessage();\n  }\n}\n\n// TODO: Example of request. Remove when go live.\n// makeGetRequest<ExercisesRequest, ExercisesResponse>('exercises', {\n//   bodypart: 'back',\n//   muscles: 'abductors',\n//   equipment: 'band',\n//   keyword: 'back',\n//   page: 1,\n//   limit: 10,\n// }).then(data => console.log('Exercises', data));\n//\n// makeGetRequest<FilterRequest, FilterResponse>('exercises', {\n//   filter: 'Body parts',\n//   page: 1,\n//   limit: 12,\n// }).then(data => console.log('Filters', data));","import { makeGetRequest } from \"../js/services/request\";\nimport { FilterRequest } from \"../js/types/request.types\";\nimport { FiltersResponse } from \"../js/types/response.types\";\n\nexport async function getFilters(filterRequest: FilterRequest): Promise<FiltersResponse> {\n    const response = await makeGetRequest<FilterRequest, FiltersResponse>(\"filters\", filterRequest);\n    if (!response) {\n        throw new Error(\"Cant' get filters\");\n    }\n    return response;\n}","import { FilterResponse } from \"../js/types/response.types\";\n\nexport function generateFiltersHtml(items: FilterResponse[]) {\n  return items.map(item => `\n          <li class=\"filter-card\" data-filter-type=\"${item.filter}\" data-filter-name=\"${item.name}\">\n            <img src=\"${item.imgURL}\" alt=\"${item.name}\" />\n            <div class=\"filter-info\">\n              <div class=\"filter-name\">${item.name}</div>\n              <div class=\"filter-type\">${item.filter}</div>\n            </div>\n          </li>\n        `)\n    .join('');\n}\n\nexport function generatePaginationHtml(totalPages: number, currentPage: number): string {\n  const pagesToShow: number[] = [];\n\n  const maxVisible = 3;\n  let startPage = Math.max(1, currentPage - 1);\n  let endPage = Math.min(totalPages, startPage + maxVisible - 1);\n\n  if (endPage - startPage + 1 < maxVisible) {\n    startPage = Math.max(1, endPage - maxVisible + 1);\n  }\n\n  for (let page = startPage; page <= endPage; page++) {\n    pagesToShow.push(page);\n  }\n\n  return pagesToShow.map(page => `\n    <li class=\"pagination-page${page === currentPage ? ' active' : ''}\" data-page=\"${page}\">${page}</li>\n  `).join('');\n}\n","export function exercisesMarkup(\n  rating: number,\n  name: string,\n  burnedCalories: string,\n  bodyPart: string,\n  target: string,\n  _id: string\n): string {\n  const iconId =\n    bodyPart.toLowerCase() === 'cardio' ? 'running' : 'fluent-food';\n\n  return `\n<li class=\"exercises-category-tile-item\" data-id=\"${_id}\">\n  <div class=\"exercises-category-tile-top\">\n    <div class=\"exercises-category-tile-workout-wrapper\">\n      <span class=\"exercises-category-tile-badge\">\n        WORKOUT\n      </span>\n      <div class=\"exercises-category-tile-rating-wrapper\">\n        <span class=\"exercises-category-tile-rating\">${rating.toFixed(1)}</span>\n        <svg class=\"exercises-category-tile-star-icon\" width=\"16\" height=\"16\">\n          <use href=\"./../img/sprite.svg#Star\"></use>\n        </svg>\n      </div>\n    </div>\n    <button class=\"exercises-category-tile-button\">\n      Start\n      <svg class=\"exercises-category-tile-arrow-icon\" width=\"16\" height=\"16\">\n        <use href=\"./../img/sprite.svg#arrow-right\"></use>\n      </svg>\n    </button>\n  </div>\n  <div class=\"exercises-category-tile-middle\">\n    <div class=\"exercises-category-tile-man-icon-container\">\n      <svg class=\"exercises-category-tile-man-icon\" width=\"16\" height=\"16\">\n        <use href=\"./../img/sprite.svg#${iconId}\"></use>\n      </svg>\n    </div>\n    <h3 class=\"exercises-category-tile-name\">${name}</h3>\n  </div>\n  <ul class=\"exercises-category-tile-bottom\">\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Burned calories:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${burnedCalories}</span>\n      </li>\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Body part:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${bodyPart}</span>\n      </li>\n      <li class=\"exercises-category-tile-bottom-item\">\n        <span class=\"exercises-category-tile-bottom-title\">Target:</span>\n        <span class=\"exercises-category-tile-bottom-value\">${target}</span>\n      </li>\n  </ul>\n</li>`;\n}","import { makeGetRequest } from '../js/services/request';\nimport { ExercisesRequest } from '../js/types/request.types';\nimport { ExercisesResponse } from '../js/types/response.types';\n\n\nexport async function getExercises(\n  params: Partial<ExercisesRequest>\n): Promise<ExercisesResponse> {\n  const response = await makeGetRequest<ExercisesRequest, ExercisesResponse>(\n    'exercises',\n    params\n  );\n  if (!response) {\n    throw new Error('Cannot get exercises');\n  }\n  return response;\n}","import { getFilters } from '../services/filter-service';\nimport { generateFiltersHtml, generatePaginationHtml } from '../html-gererators/filter-html-generator';\nimport { showErrorMessage, showInfoMessage, showSuccessMessage } from './utils/toasts';\nimport { FilterType } from './types/general.types';\nimport { exercisesMarkup } from '../html-gererators/exercises-markup';\nimport { ExercisesRequest } from './types/request.types';\nimport { ExercisesResponse } from './types/response.types';\nimport { getExercises } from '../services/ exercises-service';\n\nexport function initFilters(): void {\n  const filtersOutputContainer = document.querySelector('.filters-output') as HTMLElement;\n  const tabsContainer = document.querySelector('.filter-tabs') as HTMLElement;\n  const paginationContainer = document.querySelector('.filter-pagination') as HTMLElement;\n  const exercisesListContainer = document.querySelector('.exercises-list') as HTMLElement;\n  const exercisesPaginationContainer = document.querySelector('.exercises-pagination') as HTMLElement;\n  const exercisesFiltersForm = document.querySelector('.exercises-filters-form') as HTMLFormElement;\n\n  if (!filtersOutputContainer) throw new Error('Can\\'t find .filters-output');\n  if (!tabsContainer) throw new Error('Can\\'t find .filter-tabs');\n  if (!paginationContainer) throw new Error('Can\\'t find .filter-pagination');\n  if (!exercisesFiltersForm) throw new Error('Can\\'t find .exercises-filters-form');\n\n  let currentFilter = (tabsContainer.querySelector('.active') as HTMLElement)?.dataset.filter as FilterType;\n  let currentPage = 1;\n  let currentKeyword = \"\";\n  let currentFilterKey: string;\n  let currentFilterName: string;\n\n  exercisesFiltersForm.addEventListener('submit', (e: Event) => {\n    e.preventDefault();\n\n    const formData = new FormData(exercisesFiltersForm);\n    currentKeyword = formData.get('keyword') as string;\n\n    loadExercises(currentFilterKey, currentFilterName, currentPage);\n  });\n\n  function loadFilters(filter: FilterType, page: number): void {\n    const limit = 12;\n\n    getFilters({ filter, page, limit })\n      .then(response => {\n        filtersOutputContainer.innerHTML = generateFiltersHtml(response.results);\n        paginationContainer.innerHTML = generatePaginationHtml(response.totalPages, page);\n        filtersOutputContainer.style.display = 'flex';\n        paginationContainer.style.display = 'flex';\n\n        exercisesListContainer.style.display = 'none';\n        exercisesPaginationContainer.style.display = 'none';\n        exercisesFiltersForm.hidden = true;\n        exercisesFiltersForm.reset();\n        currentKeyword = \"\";\n\n        attachFilterCardClickHandlers();\n      })\n      .catch(error => showErrorMessage({\n        title: 'Error',\n        message: error.message,\n        position: 'topRight',\n      }));\n  }\n\n  async function loadExercises(\n    filterKey: string,\n    filterValue: string,\n    page: number,\n  ): Promise<void> {\n    if (!exercisesListContainer || !exercisesPaginationContainer) return;\n    const limit = 10;\n    const requestParams: Partial<ExercisesRequest> = {\n      [filterKey]: filterValue,\n      page,\n      limit,\n      keyword: currentKeyword,\n    };\n\n    try {\n      const response: ExercisesResponse = await getExercises(requestParams);\n      const markup = response.results\n        .map(ex =>\n          exercisesMarkup(\n            ex.rating,\n            ex.name,\n            `${ex.burnedCalories} kcal`,\n            ex.bodyPart,\n            ex.target,\n            ex._id,\n          ),\n        )\n        .join('');\n      exercisesListContainer.innerHTML = markup;\n      exercisesPaginationContainer.innerHTML = generatePaginationHtml(\n        response.totalPages,\n        response.page,\n      );\n\n      exercisesFiltersForm.hidden = false;\n      exercisesListContainer.style.display = 'flex';\n      exercisesPaginationContainer.style.display = 'flex';\n\n      attachExercisesPaginationHandlers(filterKey, filterValue);\n\n      if (response.results.length === 0) {\n        showInfoMessage({\n          title: \"\",\n          message: \" No excersies found\",\n          position: 'topRight'\n        });\n      }\n    } catch (error: any) {\n      showErrorMessage({\n        title: 'Error',\n        message: error?.message || 'Failed to load exercises',\n        position: 'topRight',\n      });\n    }\n  }\n\n  function attachFilterCardClickHandlers(): void {\n    const filterCards = filtersOutputContainer!.querySelectorAll('.filter-card');\n    filterCards.forEach(card => {\n      card.addEventListener('click', () => {\n        const filterType = card.getAttribute('data-filter-type') as string;\n        const filterName = card.getAttribute('data-filter-name') as string;\n        if (!filterType || !filterName) return;\n        currentPage = 1;\n\n        let key: string;\n        if (filterType === 'Muscles') {\n          key = 'muscles';\n        } else if (filterType === 'Body parts') {\n          key = 'bodypart';\n        } else if (filterType === 'Equipment') {\n          key = 'equipment';\n        } else {\n          return;\n        }\n\n        if (filtersOutputContainer && paginationContainer) {\n          filtersOutputContainer.innerHTML = '';\n          filtersOutputContainer.style.display = 'none';\n          paginationContainer.innerHTML = '';\n          paginationContainer.style.display = 'none';\n        }\n\n        currentFilterKey = key;\n        currentFilterName = filterName.toLowerCase();\n\n        loadExercises(key, currentFilterName, currentPage);\n      });\n    });\n  }\n\n  function attachExercisesPaginationHandlers(\n    filterKey: string,\n    filterValue: string\n  ): void {\n    const paginationPages =\n      exercisesPaginationContainer!.querySelectorAll('.pagination-page');\n    paginationPages.forEach(pageEl => {\n      pageEl.addEventListener('click', () => {\n        const newPage = Number(pageEl.getAttribute('data-page'));\n        if (!newPage || newPage === currentPage) return;\n        currentPage = newPage;\n        loadExercises(filterKey, filterValue, currentPage);\n      });\n    });\n  }\n\n  tabsContainer.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n\n    if (target.tagName.toLowerCase() !== 'li') return;\n\n    const newFilter = target.dataset.filter as FilterType;\n    if (!newFilter || newFilter === currentFilter) return;\n\n    tabsContainer.querySelectorAll('li').forEach(t => t.classList.remove('active'));\n    target.classList.add('active');\n\n    currentFilter = newFilter;\n    currentPage = 1;\n\n    loadFilters(currentFilter, currentPage);\n  });\n\n  paginationContainer.addEventListener('click', (event) => {\n    const target = event.target as HTMLElement;\n    if (target.tagName.toLowerCase() !== 'li') return;\n\n    const newPage = Number(target.dataset.page);\n    if (!newPage || newPage === currentPage) return;\n\n    currentPage = newPage;\n    loadFilters(currentFilter, currentPage);\n  });\n\n  loadFilters(currentFilter, currentPage);\n}","import { makeGetRequest } from \"../js/services/request\";\nimport { QuoteResponse } from \"../js/types/response.types\";\n\n\nexport async function getQuote(): Promise<QuoteResponse> {\n    const response = await makeGetRequest<QuoteResponse, void>(\"quote\");\n    if (!response) {\n        throw new Error(\"Cant' get quote\");\n    }\n    return response;\n}","import { getQuote } from \"../services/quote-service\";\nimport { QuoteResponse } from \"./types/response.types\";\n\nconst quoteTextElement = document.getElementById(\"quote-text\");\nconst quoteAuthorElement = document.getElementById(\"quote-author\");\n\nconst QUOTE_STORAGE_KEY = \"quote\";\nconst QUOTE_DATE_STORAGE_KEY = \"quoteDate\";\n\nfunction getCurrentDate(): string {\n  return new Date().toISOString().split(\"T\")[0];\n}\n\nfunction getStoredQuote(): QuoteResponse | null {\n  const storedQuote = localStorage.getItem(QUOTE_STORAGE_KEY);\n  const storedDate = localStorage.getItem(QUOTE_DATE_STORAGE_KEY);\n  const today = getCurrentDate();\n\n  if (storedQuote && storedDate === today) {\n    try {\n      return JSON.parse(storedQuote);\n    } catch (error) {\n      console.error(\"Error parsing stored quote:\", error);\n      return null;\n    }\n  }\n  return null;\n}\n\nfunction updateQuoteDisplay(quote: string, author: string): void {\n  if (!quoteTextElement || !quoteAuthorElement) {\n    throw new Error(\"Can't find quote elements\");\n  }\n  quoteTextElement.textContent = quote;\n  quoteAuthorElement.textContent = author;\n}\n\nfunction storeQuote(quote: string, author: string): void {\n  const quoteData = JSON.stringify({ quote, author });\n  const today = getCurrentDate();\n  localStorage.setItem(QUOTE_STORAGE_KEY, quoteData);\n  localStorage.setItem(QUOTE_DATE_STORAGE_KEY, today);\n}\n\nasync function fetchNewQuote(): Promise<QuoteResponse | null> {\n  try {\n    const data = await getQuote();\n    if (data && data.quote) {\n      return { quote: data.quote, author: data.author };\n    } else {\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching quote:\", error);\n    return null;\n  }\n}\n\nexport async function fetchQuote(): Promise<void> {\n  if (!quoteTextElement || !quoteAuthorElement) {\n    throw new Error(\"Can't find quote elements\");\n  }\n\n  const storedQuoteData = getStoredQuote();\n  if (storedQuoteData) {\n    updateQuoteDisplay(storedQuoteData.quote, storedQuoteData.author);\n    return;\n  }\n\n  const newQuoteData = await fetchNewQuote();\n  if (newQuoteData) {\n    storeQuote(newQuoteData.quote, newQuoteData.author);\n    updateQuoteDisplay(newQuoteData.quote, newQuoteData.author);\n  } else {\n    updateQuoteDisplay(\"Failed to fetch quote.\", \"\");\n  }\n}","import { showErrorMessage, showSuccessMessage } from './utils/toasts';\nimport { makePostRequest } from './services/request';\nimport { SubscriptionRequest } from './types/request.types';\n\nexport function initFooter() {\n  const form = document.getElementById('subscription-form') as HTMLFormElement;\n\n  const footerYearElement = document.querySelector('.footer-year p');\n  if (footerYearElement) {\n    footerYearElement.textContent = `©${new Date().getFullYear()}`;\n  }\n\n  if (!form) {\n    return;\n  }\n\n  form.addEventListener('submit', handleSubscriptionSubmit);\n\n  async function handleSubscriptionSubmit(event: Event): Promise<void> {\n    event.preventDefault();\n\n    const formData = new FormData(form);\n    const email = formData.get('email') as string;\n\n    if (!email || !isValidEmail(email)) {\n      showErrorMessage({\n        title: 'Error',\n        message: 'Please enter a valid email address',\n        position: 'topRight',\n      });\n      return;\n    }\n\n    try {\n      const response = await makePostRequest<SubscriptionRequest, void>(\n        'subscription',\n        { email }\n      );\n\n      if (response === undefined) {\n        throw new Error('Subscription failed');\n      }\n\n      form.reset();\n\n      showSuccessMessage({\n        title: 'Success',\n        message: 'Thank you for subscribing!',\n        position: 'topRight',\n      });\n    } catch (error) {\n      showErrorMessage({\n        title: 'Error',\n        message: 'Failed to subscribe. Please try again later.',\n        position: 'topRight',\n      });\n    }\n  }\n\n  function isValidEmail(email: string): boolean {\n    const emailPattern = /^\\w+(\\.\\w+)*@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/;\n    return emailPattern.test(email);\n  }\n}\n","import { initFilters } from \"./js/init-filter\";\nimport { fetchQuote } from \"./js/quote\";\nimport { initFooter } from './js/init-footer';\n\ninitFilters();\nfetchQuote();\ninitFooter();"],"names":["YOUR_ENERGY_API_URL","showErrorMessage","title","message","position","otherOptions","iziToast","showSuccessMessage","showInfoMessage","makeGetRequest","endpoint","requestData","data","axios","e","makePostRequest","getFilters","filterRequest","response","generateFiltersHtml","items","item","generatePaginationHtml","totalPages","currentPage","pagesToShow","startPage","endPage","page","exercisesMarkup","rating","name","burnedCalories","bodyPart","target","_id","iconId","getExercises","params","initFilters","filtersOutputContainer","tabsContainer","paginationContainer","exercisesListContainer","exercisesPaginationContainer","exercisesFiltersForm","currentFilter","_a","currentKeyword","currentFilterKey","currentFilterName","loadExercises","loadFilters","filter","attachFilterCardClickHandlers","error","filterKey","filterValue","limit","requestParams","markup","ex","attachExercisesPaginationHandlers","card","filterType","filterName","key","pageEl","newPage","event","newFilter","t","getQuote","quoteTextElement","quoteAuthorElement","QUOTE_STORAGE_KEY","QUOTE_DATE_STORAGE_KEY","getCurrentDate","getStoredQuote","storedQuote","storedDate","today","updateQuoteDisplay","quote","author","storeQuote","quoteData","fetchNewQuote","fetchQuote","storedQuoteData","newQuoteData","initFooter","form","footerYearElement","handleSubscriptionSubmit","email","isValidEmail"],"mappings":"iyBAAO,MAAMA,EAAsB,wCCGtBC,EAAmB,CAC9B,CAAE,MAAAC,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,GAAiB,CAC9C,MAAO,QACP,QAAS,gDACT,SAAU,UACZ,IACG,CACHC,EAAS,MAAM,CACb,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,EAEaE,EAAqB,CAChC,CAAE,MAAAL,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,GAAiB,CAC9C,MAAO,UACP,QAAS,oCACT,SAAU,UACZ,IACG,CACHC,EAAS,QAAQ,CACf,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,EAEaG,EAAkB,CAC7B,CAAE,MAAAN,EAAO,QAAAC,EAAS,SAAAC,EAAU,GAAGC,KAC5B,CACHC,EAAS,KAAK,CACZ,MAAAJ,EACA,QAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,CACJ,CACH,ECzBaI,EAAiB,MAAaC,EAAkBC,IAAqD,CAC5G,GAAA,CACI,KAAA,CAAE,KAAAC,GAAS,MAAMC,EAAM,IAAO,GAAGb,CAAmB,GAAGU,CAAQ,GAAI,CACvE,OAAQC,CAAA,CACT,EAEM,OAAAC,QACAE,EAAG,CACV,QAAQ,MAAMA,CAAC,EACEb,EAAA,CAAA,CAErB,EAcac,EAAkB,MAAaL,EAAkBC,IAA2C,CACnG,GAAA,CACI,KAAA,CAAE,KAAAC,CAAK,EAAI,MAAMC,EAAM,KAAQ,GAAGb,CAAmB,GAAGU,CAAQ,GAAIC,CAAW,EAE9E,OAAAC,QACAE,EAAG,CACV,QAAQ,MAAMA,CAAC,EACEb,EAAA,CAAA,CAErB,EC/CA,eAAsBe,EAAWC,EAAwD,CACrF,MAAMC,EAAW,MAAMT,EAA+C,UAAWQ,CAAa,EAC9F,GAAI,CAACC,EACK,MAAA,IAAI,MAAM,mBAAmB,EAEhC,OAAAA,CACX,CCRO,SAASC,EAAoBC,EAAyB,CACpD,OAAAA,EAAM,IAAYC,GAAA;AAAA,sDAC2BA,EAAK,MAAM,uBAAuBA,EAAK,IAAI;AAAA,wBACzEA,EAAK,MAAM,UAAUA,EAAK,IAAI;AAAA;AAAA,yCAEbA,EAAK,IAAI;AAAA,yCACTA,EAAK,MAAM;AAAA;AAAA;AAAA,SAG3C,EACJ,KAAK,EAAE,CACZ,CAEgB,SAAAC,EAAuBC,EAAoBC,EAA6B,CACtF,MAAMC,EAAwB,CAAC,EAG/B,IAAIC,EAAY,KAAK,IAAI,EAAGF,EAAc,CAAC,EACvCG,EAAU,KAAK,IAAIJ,EAAYG,EAAY,EAAa,CAAC,EAEzDC,EAAUD,EAAY,EAAI,IAC5BA,EAAY,KAAK,IAAI,EAAGC,EAAU,EAAa,CAAC,GAGlD,QAASC,EAAOF,EAAWE,GAAQD,EAASC,IAC1CH,EAAY,KAAKG,CAAI,EAGhB,OAAAH,EAAY,IAAYG,GAAA;AAAA,gCACDA,IAASJ,EAAc,UAAY,EAAE,gBAAgBI,CAAI,KAAKA,CAAI;AAAA,GAC/F,EAAE,KAAK,EAAE,CACZ,CCjCO,SAASC,EACdC,EACAC,EACAC,EACAC,EACAC,EACAC,EACQ,CACR,MAAMC,EACJH,EAAS,YAAY,IAAM,SAAW,UAAY,cAE7C,MAAA;AAAA,oDAC2CE,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAOAL,EAAO,QAAQ,CAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAgB/BM,CAAM;AAAA;AAAA;AAAA,+CAGAL,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,6DAKUC,CAAc;AAAA;AAAA;AAAA;AAAA,6DAIdC,CAAQ;AAAA;AAAA;AAAA;AAAA,6DAIRC,CAAM;AAAA;AAAA;AAAA,MAInE,CClDA,eAAsBG,EACpBC,EAC4B,CAC5B,MAAMpB,EAAW,MAAMT,EACrB,YACA6B,CACF,EACA,GAAI,CAACpB,EACG,MAAA,IAAI,MAAM,sBAAsB,EAEjC,OAAAA,CACT,CCPO,SAASqB,GAAoB,OAC5B,MAAAC,EAAyB,SAAS,cAAc,iBAAiB,EACjEC,EAAgB,SAAS,cAAc,cAAc,EACrDC,EAAsB,SAAS,cAAc,oBAAoB,EACjEC,EAAyB,SAAS,cAAc,iBAAiB,EACjEC,EAA+B,SAAS,cAAc,uBAAuB,EAC7EC,EAAuB,SAAS,cAAc,yBAAyB,EAE7E,GAAI,CAACL,EAA8B,MAAA,IAAI,MAAM,4BAA6B,EAC1E,GAAI,CAACC,EAAqB,MAAA,IAAI,MAAM,yBAA0B,EAC9D,GAAI,CAACC,EAA2B,MAAA,IAAI,MAAM,+BAAgC,EAC1E,GAAI,CAACG,EAA4B,MAAA,IAAI,MAAM,oCAAqC,EAEhF,IAAIC,GAAiBC,EAAAN,EAAc,cAAc,SAAS,IAArC,YAAAM,EAAwD,QAAQ,OACjFvB,EAAc,EACdwB,EAAiB,GACjBC,EACAC,EAEiBL,EAAA,iBAAiB,SAAW/B,GAAa,CAC5DA,EAAE,eAAe,EAGAkC,EADA,IAAI,SAASH,CAAoB,EACxB,IAAI,SAAS,EAEzBM,EAAAF,EAAkBC,EAAmB1B,CAAW,CAAA,CAC/D,EAEQ,SAAA4B,EAAYC,EAAoBzB,EAAoB,CAG3DZ,EAAW,CAAE,OAAAqC,EAAQ,KAAAzB,EAAM,SAAO,EAC/B,KAAiBV,GAAA,CACOsB,EAAA,UAAYrB,EAAoBD,EAAS,OAAO,EACvEwB,EAAoB,UAAYpB,EAAuBJ,EAAS,WAAYU,CAAI,EAChFY,EAAuB,MAAM,QAAU,OACvCE,EAAoB,MAAM,QAAU,OAEpCC,EAAuB,MAAM,QAAU,OACvCC,EAA6B,MAAM,QAAU,OAC7CC,EAAqB,OAAS,GAC9BA,EAAqB,MAAM,EACVG,EAAA,GAEaM,EAAA,CAC/B,CAAA,EACA,MAAMC,GAAStD,EAAiB,CAC/B,MAAO,QACP,QAASsD,EAAM,QACf,SAAU,UAAA,CACX,CAAC,CAAA,CAGS,eAAAJ,EACbK,EACAC,EACA7B,EACe,CACX,GAAA,CAACe,GAA0B,CAACC,EAA8B,OAC9D,MAAMc,EAAQ,GACRC,EAA2C,CAC/C,CAACH,CAAS,EAAGC,EACb,KAAA7B,EACA,MAAA8B,EACA,QAASV,CACX,EAEI,GAAA,CACI,MAAA9B,EAA8B,MAAMmB,EAAasB,CAAa,EAC9DC,EAAS1C,EAAS,QACrB,IACC2C,GAAAhC,EACEgC,EAAG,OACHA,EAAG,KACH,GAAGA,EAAG,cAAc,QACpBA,EAAG,SACHA,EAAG,OACHA,EAAG,GAAA,CACL,EAED,KAAK,EAAE,EACVlB,EAAuB,UAAYiB,EACnChB,EAA6B,UAAYtB,EACvCJ,EAAS,WACTA,EAAS,IACX,EAEA2B,EAAqB,OAAS,GAC9BF,EAAuB,MAAM,QAAU,OACvCC,EAA6B,MAAM,QAAU,OAE7CkB,EAAkCN,EAAWC,CAAW,EAEpDvC,EAAS,QAAQ,SAAW,GACdV,EAAA,CACd,MAAO,GACP,QAAS,sBACT,SAAU,UAAA,CACX,QAEI+C,EAAY,CACFtD,EAAA,CACf,MAAO,QACP,SAASsD,GAAA,YAAAA,EAAO,UAAW,2BAC3B,SAAU,UAAA,CACX,CAAA,CACH,CAGF,SAASD,GAAsC,CACzBd,EAAwB,iBAAiB,cAAc,EAC/D,QAAgBuB,GAAA,CACrBA,EAAA,iBAAiB,QAAS,IAAM,CAC7B,MAAAC,EAAaD,EAAK,aAAa,kBAAkB,EACjDE,EAAaF,EAAK,aAAa,kBAAkB,EACnD,GAAA,CAACC,GAAc,CAACC,EAAY,OAClBzC,EAAA,EAEV,IAAA0C,EACJ,GAAIF,IAAe,UACXE,EAAA,kBACGF,IAAe,aAClBE,EAAA,mBACGF,IAAe,YAClBE,EAAA,gBAEN,QAGE1B,GAA0BE,IAC5BF,EAAuB,UAAY,GACnCA,EAAuB,MAAM,QAAU,OACvCE,EAAoB,UAAY,GAChCA,EAAoB,MAAM,QAAU,QAGnBO,EAAAiB,EACnBhB,EAAoBe,EAAW,YAAY,EAE7Bd,EAAAe,EAAKhB,EAAmB1B,CAAW,CAAA,CAClD,CAAA,CACF,CAAA,CAGM,SAAAsC,EACPN,EACAC,EACM,CAEJb,EAA8B,iBAAiB,kBAAkB,EACnD,QAAkBuB,GAAA,CACzBA,EAAA,iBAAiB,QAAS,IAAM,CACrC,MAAMC,EAAU,OAAOD,EAAO,aAAa,WAAW,CAAC,EACnD,CAACC,GAAWA,IAAY5C,IACdA,EAAA4C,EACAjB,EAAAK,EAAWC,EAAajC,CAAW,EAAA,CAClD,CAAA,CACF,CAAA,CAGWiB,EAAA,iBAAiB,QAAU4B,GAAU,CACjD,MAAMnC,EAASmC,EAAM,OAErB,GAAInC,EAAO,QAAQ,YAAY,IAAM,KAAM,OAErC,MAAAoC,EAAYpC,EAAO,QAAQ,OAC7B,CAACoC,GAAaA,IAAcxB,IAElBL,EAAA,iBAAiB,IAAI,EAAE,WAAa8B,EAAE,UAAU,OAAO,QAAQ,CAAC,EACvErC,EAAA,UAAU,IAAI,QAAQ,EAEbY,EAAAwB,EACF9C,EAAA,EAEd4B,EAAYN,EAAetB,CAAW,EAAA,CACvC,EAEmBkB,EAAA,iBAAiB,QAAU2B,GAAU,CACvD,MAAMnC,EAASmC,EAAM,OACrB,GAAInC,EAAO,QAAQ,YAAY,IAAM,KAAM,OAE3C,MAAMkC,EAAU,OAAOlC,EAAO,QAAQ,IAAI,EACtC,CAACkC,GAAWA,IAAY5C,IAEdA,EAAA4C,EACdhB,EAAYN,EAAetB,CAAW,EAAA,CACvC,EAED4B,EAAYN,EAAetB,CAAW,CACxC,CClMA,eAAsBgD,GAAmC,CAC/C,MAAAtD,EAAW,MAAMT,EAAoC,OAAO,EAClE,GAAI,CAACS,EACK,MAAA,IAAI,MAAM,iBAAiB,EAE9B,OAAAA,CACX,CCPA,MAAMuD,EAAmB,SAAS,eAAe,YAAY,EACvDC,EAAqB,SAAS,eAAe,cAAc,EAE3DC,EAAoB,QACpBC,EAAyB,YAE/B,SAASC,GAAyB,CACzB,OAAA,IAAI,OAAO,cAAc,MAAM,GAAG,EAAE,CAAC,CAC9C,CAEA,SAASC,GAAuC,CACxC,MAAAC,EAAc,aAAa,QAAQJ,CAAiB,EACpDK,EAAa,aAAa,QAAQJ,CAAsB,EACxDK,EAAQJ,EAAe,EAEzB,GAAAE,GAAeC,IAAeC,EAC5B,GAAA,CACK,OAAA,KAAK,MAAMF,CAAW,QACtBxB,EAAO,CACN,eAAA,MAAM,8BAA+BA,CAAK,EAC3C,IAAA,CAGJ,OAAA,IACT,CAEA,SAAS2B,EAAmBC,EAAeC,EAAsB,CAC3D,GAAA,CAACX,GAAoB,CAACC,EAClB,MAAA,IAAI,MAAM,2BAA2B,EAE7CD,EAAiB,YAAcU,EAC/BT,EAAmB,YAAcU,CACnC,CAEA,SAASC,EAAWF,EAAeC,EAAsB,CACvD,MAAME,EAAY,KAAK,UAAU,CAAE,MAAAH,EAAO,OAAAC,EAAQ,EAC5CH,EAAQJ,EAAe,EAChB,aAAA,QAAQF,EAAmBW,CAAS,EACpC,aAAA,QAAQV,EAAwBK,CAAK,CACpD,CAEA,eAAeM,GAA+C,CACxD,GAAA,CACI,MAAA3E,EAAO,MAAM4D,EAAS,EACxB,OAAA5D,GAAQA,EAAK,MACR,CAAE,MAAOA,EAAK,MAAO,OAAQA,EAAK,MAAO,EAEzC,WAEF2C,EAAO,CACN,eAAA,MAAM,wBAAyBA,CAAK,EACrC,IAAA,CAEX,CAEA,eAAsBiC,GAA4B,CAC5C,GAAA,CAACf,GAAoB,CAACC,EAClB,MAAA,IAAI,MAAM,2BAA2B,EAG7C,MAAMe,EAAkBX,EAAe,EACvC,GAAIW,EAAiB,CACAP,EAAAO,EAAgB,MAAOA,EAAgB,MAAM,EAChE,MAAA,CAGI,MAAAC,EAAe,MAAMH,EAAc,EACrCG,GACSL,EAAAK,EAAa,MAAOA,EAAa,MAAM,EAC/BR,EAAAQ,EAAa,MAAOA,EAAa,MAAM,GAE1DR,EAAmB,yBAA0B,EAAE,CAEnD,CCxEO,SAASS,GAAa,CACrB,MAAAC,EAAO,SAAS,eAAe,mBAAmB,EAElDC,EAAoB,SAAS,cAAc,gBAAgB,EAKjE,GAJIA,IACFA,EAAkB,YAAc,IAAI,IAAI,KAAK,EAAE,aAAa,IAG1D,CAACD,EACH,OAGGA,EAAA,iBAAiB,SAAUE,CAAwB,EAExD,eAAeA,EAAyBzB,EAA6B,CACnEA,EAAM,eAAe,EAGf,MAAA0B,EADW,IAAI,SAASH,CAAI,EACX,IAAI,OAAO,EAElC,GAAI,CAACG,GAAS,CAACC,EAAaD,CAAK,EAAG,CACjB9F,EAAA,CACf,MAAO,QACP,QAAS,qCACT,SAAU,UAAA,CACX,EACD,MAAA,CAGE,GAAA,CAMF,GALiB,MAAMc,EACrB,eACA,CAAE,MAAAgF,CAAM,CACV,IAEiB,OACT,MAAA,IAAI,MAAM,qBAAqB,EAGvCH,EAAK,MAAM,EAEQrF,EAAA,CACjB,MAAO,UACP,QAAS,6BACT,SAAU,UAAA,CACX,OACa,CACGN,EAAA,CACf,MAAO,QACP,QAAS,+CACT,SAAU,UAAA,CACX,CAAA,CACH,CAGF,SAAS+F,EAAaD,EAAwB,CAErC,MADc,2CACD,KAAKA,CAAK,CAAA,CAElC,CC3DAxD,EAAY,EACZiD,EAAW,EACXG,EAAW"}